name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npx tsc --noEmit

      - name: Build project
        run: npm run build

      - name: Backup current deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /var/www/skit.sascha-kohler.at
            if [ -d "current" ]; then
              rm -rf backup
              mv current backup
            fi
            mkdir -p current

      - name: Deploy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "dist/*"
          target: "/var/www/skit.sascha-kohler.at/current"
          strip_components: 1
          overwrite: true

      - name: Set permissions
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            sudo chown -R www-data:www-data /var/www/skit.sascha-kohler.at/current
            sudo chmod -R 755 /var/www/skit.sascha-kohler.at/current

      - name: Configure Nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # PrÃ¼fe ob der Link bereits existiert und entferne ihn gegebenenfalls
            sudo rm -f /etc/nginx/sites-enabled/skit.sascha-kohler.at.conf
            # Erstelle den neuen symbolischen Link
            sudo ln -s /etc/nginx/sites-available/skit.sascha-kohler.at.conf /etc/nginx/sites-enabled/
            # Teste die Nginx Konfiguration
            sudo nginx -t
            # Wenn der Test erfolgreich war, lade Nginx neu
            if [ $? -eq 0 ]; then
                sudo systemctl reload nginx
            else
                echo "Nginx configuration test failed"
                exit 1
            fi
      - name: Verify deployment
        run: |
          # Warte kurz, damit Nginx neu geladen werden kann
          sleep 5
          if curl -s --head https://skit.sascha-kohler.at | grep "200 OK" > /dev/null; then 
            echo "Deployment successful!"
          else
            echo "Deployment verification failed"
            exit 1
          fi

